// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum FuelType {
  Gas
  Diesel
  Lpg
  Electric
  Hybrid
}

enum TransmissionType {
  manual
  automatic
  semi_automatic
}

enum CarState {
  broken
  fine
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  cars      Car[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Car {
  id                String           @id @default(uuid())
  model             CarModel         @relation(fields: [carModelId], references: [id])
  year              Int
  milage            Int
  price             Float
  fuel_type         FuelType
  transmission_type TransmissionType
  horse_power       Int
  engine_capacity   Int
  color             String
  origin            Origin           @relation(fields: [originId], references: [id])
  state             CarState
  owner             User             @relation(fields: [userId], references: [id])
  userId            String
  carModelId        String
  fuelTypeId        String
  originId          String
  images            CarImage[]
}

model CarMake {
  id     String     @id @default(uuid())
  name   String
  models CarModel[]
}

model Origin {
  id   String @id @default(uuid())
  name String
  cars Car[]
}

model CarModel {
  id   String  @id @default(uuid())
  make CarMake @relation(fields: [carMakeId], references: [id])

  name      String
  carMakeId String
  cars      Car[]
}

model CarImage {
  id     String  @id @default(uuid())
  car    Car     @relation(fields: [carId], references: [id])
  carId  String
  url    String
  isMain Boolean
}
